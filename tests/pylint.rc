[MASTER]

# Profiled execution.
profile=no

# Pickle collected data for later comparisons.
persistent=no

ignore=
load-plugins=

[MESSAGES CONTROL]

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifier separated by comma (,) or put this option
# multiple time (only on the command line, not in the configuration file where
# it should appear only once).
disable=I0011,I0012,I0013,C0303,C0330,C0326,R0401

[REPORTS]

# Set the output format. Available formats are text, parseable, colorized, msvs
# (visual studio) and html
output-format=parseable

# Include message's id in output
include-ids=yes

# Put messages in a separate file for each module / package specified on the
# command line instead of printing them on stdout. Reports (if any) will be
# written in a file name "pylint_global.[txt|html]".
files-output=no

# Tells whether to display a full report or only the messages
reports=yes

# Python expression which should return a note less than 10 (10 is the highest
# note). You have access to the variables errors warning, statement which
# respectively contain the number of errors / warnings messages and the total
# number of statements analyzed. This is used by the global evaluation report
# (RP0004).
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

# Add a comment according to your evaluation note. This is used by the global
# evaluation report (RP0004).
comment=no

[VARIABLES]

# Tells whether we should check for unused import in __init__ files.
init-import=yes

# A regular expression matching the beginning of the name of dummy variables
# (i.e. not used).
dummy-variables-rgx=_

additional-builtins=

[MISCELLANEOUS]

notes=

[FORMAT]

# Maximum number of characters on a single line.
max-line-length=130

# Maximum number of lines in a module
max-module-lines=2000

# String used as indentation unit. This is usually " " (4 spaces) or "\t" (1
# tab).
indent-string='    '

# List of optional constructs for which whitespace checking is disabled
no-space-check=trailing-comma,dict-separator

single-line-if-stmt=yes

indent-after-paren=4

[BASIC]

# Required attributes for module, separated by a comma
required-attributes=

# List of builtins function names that should not be used, separated by a comma
bad-functions=map,filter,apply,input,callable,coerce,execfile,reduce,reload

# Regular expression which should only match correct module names
module-rgx=_{0,1}[a-z][a-z0-9_]*[a-z0-9]$

# Regular expression which should only match correct module level names
const-rgx=_{0,1}(([a-z][a-z0-9_]*[a-z0-9])|([A-Z][A-Z0-9_]*[A-Z0-9]))$

# Regular expression which should only match correct class names
class-rgx=_{0,1}[A-Z][a-zA-Z0-9_]*[a-zA-Z0-9]$

# Regular expression which should only match correct function names
function-rgx=_{0,1}[a-z][a-z0-9_]*[a-z0-9]$

# Regular expression which should only match correct method names
method-rgx=((_{0,2}[a-z][a-z0-9_]*[a-z0-9])|(__[a-z][a-z0-9_]*[a-z0-9]__))

# Regular expression which should only match correct instance attribute names
attr-rgx=_{0,2}[a-z][a-z0-9_]*[a-z0-9]$

# Regular expression which should only match correct class attribute names
class-attribute-rgx=_{0,2}[A-Z][A-Z0-9_]*[A-Z0-9]$

# Regular expression which should only match correct argument names
argument-rgx=_{0,1}(([a-z])|([a-z0-9_]*[a-z0-9]))$

# Regular expression which should only match correct variable names
variable-rgx=_{0,1}(([a-z])|([a-z][a-z0-9_]*[a-z0-9]))$

# Regular expression which should only match correct list comprehension /
# generator expression variable names
inlinevar-rgx=(([a-z])|([a-z][a-z0-9_]*[a-z0-9]))$

# Good variable names which should always be accepted, separated by a comma
good-names=_

# Bad variable names which should always be refused, separated by a comma
bad-names=foo,bar,baz,toto,tutu,tata

# Regular expression which should only match functions or classes name which do
# not require a docstring
no-docstring-rgx=

# Minimum line length for functions/classes that require docstrings
docstring-min-length=1

[SIMILARITIES]

# Minimum lines number of a similarity.
min-similarity-lines=8

# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes


[TYPECHECK]

# Tells whether missing members accessed in mixin class should be ignored. A
# mixin class is detected if its name ends with "mixin" (case insensitive).
ignore-mixin-members=yes

# List of classes names for which member attributes should not be checked
# (useful for classes with attributes dynamically set).
ignored-classes=SQLObject

# When zope mode is activated, add a predefined set of Zope acquired attributes
# to generated-members.
zope=no

# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E0201 when accessed.
generated-members=REQUEST,acl_users,aq_parent


[DESIGN]

# Maximum number of arguments for function / method
max-args=20

# Argument names that match this expression will be ignored. Default to name
# with leading underscore
ignored-argument-names=_.*

# Maximum number of locals for function / method body
max-locals=50

# Maximum number of return / yield for function / method body
max-returns=25

# Maximum number of branch for function / method body
max-branchs=75
max-branches=75

# Maximum number of statements in function / method body
max-statements=250

# Maximum number of parents for a class (see R0901).
max-parents=7

# Maximum number of attributes for a class (see R0902).
max-attributes=25

# Minimum number of public methods for a class (see R0903).
min-public-methods=1

# Maximum number of public methods for a class (see R0904).
max-public-methods=100


[CLASSES]

# List of interface methods to ignore, separated by a comma. This is used for
# instance to not check methods defines in Zope's Interface base class.
ignore-iface-methods=

# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp,on_connect

valid-classmethod-first-arg=cls,clazz

valid-metaclass-classmethod-first-arg=mcs

[IMPORTS]

# Deprecated modules which should not be used, separated by a comma
deprecated-modules=regsub,string,TERMIOS,Bastion,rexec

# Create a graph of every (i.e. internal and external) dependencies in the
# given file (report RP0402 must not be disabled)
import-graph=

# Create a graph of external dependencies in the given file (report RP0402 must
# not be disabled)
ext-import-graph=

# Create a graph of internal dependencies in the given file (report RP0402 must
# not be disabled)
int-import-graph=

[EXCEPTIONS]

# Exceptions that will emit a warning when being caught.
overgeneral-exceptions=BaseException,Exception,StandardError,Warning

[LOGGING]

logging-modules=logging

